version: '3.8'

services:
  backend:
    build:
      context: ./backend
    ports:
      - '3001:3001'
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=root
      - MYSQL_PASSWORD=rootpassword
      - MYSQL_DATABASE=testdb
      - MONGO_URI=mongodb://mongo:27017/testdb
      - FRONTEND_URL=http://localhost:3000
      - JWT_SECRET=your_jwt_secret
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - kafka
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
    ports:
      - '3000:80'
    environment:
      - REACT_APP_BACKEND_URL=http://backend:3001
    networks:
      - app-network

  mysql:
    image: mysql:5.7
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: testdb
    networks:
      - app-network
    volumes:
      - mysql-data:/var/lib/mysql

  mongo:
    image: mongo
    ports:
      - '27017:27017'
    networks:
      - app-network
    volumes:
      - mongo-data:/data/db

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
  mongo-data:
